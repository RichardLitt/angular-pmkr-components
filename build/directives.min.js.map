{"version":3,"file":"directives.min.js","sources":["directives.js","pristineOriginal\\pristineOriginal.js","validateCustom\\validateCustom.js"],"names":[],"mappings":"AAAA,QAAA,OAAA,8BACA,wBACA,wBCFA,QAAA,OAAA,4BAEA,UAAA,wBACA,WAEA,GAAA,IACA,SAAA,IACA,QAAA,UACA,KAAA,SAAA,EAAA,EAAA,EAAA,GAEA,GAAA,GAAA,IAEA,GAAA,OAAA,WACA,MAAA,GAAA,YACA,SAAA,GAEA,OAAA,IACA,EAAA,EAAA,SAAA,GAAA,GAAA,EAAA,YAIA,IAAA,GACA,EAAA,kBAQA,OAAA,MC9BA,QAAA,OAAA,uBACA,kBAGA,UAAA,sBACA,KACA,gBACA,SAAA,EAAA,GAEA,GAAA,IACA,SAAA,IACA,QAAA,UAEA,SAAA,EACA,KAAA,SAAA,EAAA,EAAA,EAAA,GAgBA,QAAA,GAAA,GACA,MAAA,GAAA,QACA,EAAA,YAAA,EACA,EAAA,GAAA,IAGA,QAAA,GAAA,GAIA,MAFA,GAAA,MAAA,EAAA,SAAA,EAEA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,SACA,EAAA,QAAA,EAAA,YAAA,IAIA,EAAA,SAAA,MAEA,GAAA,GAAA,KAAA,SAAA,GACA,IACA,EAAA,aAAA,EACA,EAAA,EAAA,MAAA,EACA,EAAA,SAAA,EACA,EAAA,YACA,EAAA,QAAA,EAAA,YAAA,MArCA,GAAA,GAAA,EAAA,MAAA,EAAA,oBACA,IACA,GAAA,QAAA,EAAA,EAAA,OAAA,EAEA,IAAA,IAAA,EACA,GAAA,CAEA,GAAA,YAAA,EAAA,MAAA,WACA,MAAA,GAGA,IAAA,GAAA,EAAA,EAAA,EAAA,MACA,EAAA,EAAA,OAAA,EA8BA,GAAA,OAAA,WACA,MAAA,GAAA,YACA,IAMA,OAAA","sourcesContent":["angular.module('pmkr.components.directives', [\r\n  'pmkr.pristineOriginal',\r\n  'pmkr.validateCustom'\r\n]);","angular.module('pmkr.pristineOriginal', [])\r\n\r\n.directive('pmkrPristineOriginal', [\r\n  function() {\r\n\r\n    var directive = {\r\n      restrict : 'A',\r\n      require : 'ngModel',\r\n      link: function($scope, $element, $atts, $ngModel) {\r\n\r\n        var pristineVal = null;\r\n\r\n        $scope.$watch(function() {\r\n          return $ngModel.$viewValue;\r\n        }, function(val) {\r\n          // set pristineVal to newVal the first time this function runs\r\n          if (pristineVal === null) {\r\n            pristineVal = $ngModel.$isEmpty(val) ? '' : val.toString();\r\n          }\r\n\r\n          // newVal is the original value - set input to pristine state\r\n          if (pristineVal === val) {\r\n            $ngModel.$setPristine();\r\n          }\r\n\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n    return directive;\r\n\r\n  }\r\n])\r\n\r\n;","angular.module('pmkr.validateCustom', [\r\n  'pmkr.debounce'\r\n])\r\n\r\n.directive('pmkrValidateCustom', [\r\n  '$q',\r\n  'pmkr.debounce',\r\n  function($q, debounce) {\r\n\r\n    var directive = {\r\n      restrict: 'A',\r\n      require: 'ngModel',\r\n      // set priority so that other directives can change ngModel state ($pristine, etc) before gate function\r\n      priority: 1,\r\n      link: function($scope, $element, $attrs, $ngModel) {\r\n\r\n        var opts = $scope.$eval($attrs.pmkrValidateCustom);\r\n        var props = {};\r\n        opts.props && ($scope[opts.props] = props);\r\n\r\n        var valid = true; // field is initially valid\r\n        var gate = false;\r\n\r\n        $ngModel.$validators[opts.name] = function() {\r\n          return valid;\r\n        };\r\n\r\n        var debouncedFn = debounce(validate, opts.wait);\r\n        var latestFn = debounce.latest(debouncedFn);\r\n\r\n        function validate(val) {\r\n          if (gate) { return; }\r\n          props.validating = true;\r\n          return opts.fn(val);\r\n        }\r\n\r\n        function valueChange(val) {\r\n\r\n          props.valid = props.invalid = false;\r\n\r\n          if (opts.gate && (gate = opts.gate(val, $ngModel))) {\r\n            props.pending = props.validating = false;\r\n            return;\r\n          }\r\n\r\n          props.pending = true;\r\n\r\n          latestFn(val).then(function(isValid) {\r\n            if (gate) { return; }\r\n            props.checkedValue = val;\r\n            valid = props.valid = isValid;\r\n            props.invalid = !valid;\r\n            $ngModel.$validate();\r\n            props.pending = props.validating = false;\r\n          });\r\n\r\n        }\r\n\r\n        $scope.$watch(function() {\r\n          return $ngModel.$viewValue;\r\n        }, valueChange);\r\n\r\n      } // link\r\n\r\n    }; // directive\r\n\r\n    return directive;\r\n\r\n  }\r\n])\r\n\r\n;"],"sourceRoot":"/source/"}